<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>eas.com</groupId>
    <artifactId>hibernate-gea</artifactId>
    <version>1.0-SNAPSHOT</version>
    <description>Tips: Entity mapping by xml, CRUD Dao with Generic, use of Scanner for console. JPQL Query
    Maven compiler-plugin, Maven jar-plugin, Maven dependency-plugin </description>


    <properties>
        <jdk.version>1.8</jdk.version>
        <hibernate.version>5.2.2.Final</hibernate.version>
        <log4j.version>1.2.17</log4j.version>
        <mysql.version>5.1.19</mysql.version>
        <maven-jar.version>3.0.2</maven-jar.version>
        <maven-dependency.version>2.10</maven-dependency.version>
        <main-class>eas.com.App</main-class>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/log4j/log4j No obligatory, it is for configuring the hibernate log-->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>

    </dependencies>



    <build>
        <plugins>
            <!-- Plugin for compiling with specific jdk -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <!-- Plugin for generating the jar file -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>${project.build.finalName}.lib/</classpathPrefix>
                            <mainClass>${main-class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!-- Plugin for save the dependencies in specific folder -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${project.build.finalName}.lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>